name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches:
      - main  # Adjust branch name as needed

env:
  AWS_REGION: us-east-1  # Update with your AWS region
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}  # Replace with your AWS account ID
  ECR_REPOSITORY: mediuma-app-repo  # Replace with your ECR repository name

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: "latest"
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: $EC2_INSTANCE_IP
          username: $EC2_INSTANCE_USER
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker pull "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME"
            docker stop my-container || true
            docker rm my-container || true
            docker run -d --name my-container -p 80:3000 "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME"

      - name: Retrieve EC2 instance IPs by Tag
        id: ec2-instances
        run: |
          INSTANCE_IDS=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=my-instance-name" --query "Reservations[*].Instances[*].InstanceId" --output text)
          echo "Found instances: $INSTANCE_IDS"
          echo "::set-output name=instance_ids::$INSTANCE_IDS"

      - name: Retrieve EC2 instance IPs
        id: ec2-ips
        run: |
          INSTANCE_IPS=$(aws ec2 describe-instances --instance-ids ${{ steps.ec2-instances.outputs.instance_ids }} --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
          echo "Found instance IPs: $INSTANCE_IPS"
          echo "::set-output name=instance_ips::$INSTANCE_IPS"

      - name: Deploy to EC2 instances
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.ec2-ips.outputs.instance_ips }}
          username: $EC2_INSTANCE_USER
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker login --username AWS --password ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker pull "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPO_NAME:latest"
            docker stop medium-app || true
            docker rm medium-app || true
            docker run -d --name medium-app -p 80:3000 "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPO_NAME:latest"